"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[800],{47228:e=>{e.exports=JSON.parse('{"functions":[{"name":"alloc","desc":"Allocates space in the internal bit buffer without writing any values.\\nThis is used to reserve bits ahead of time.","params":[{"name":"self","desc":"A writer instance created with .new","lua_type":"WriterData"},{"name":"bits","desc":"Number of bits to allocate.","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":25,"path":"src/BitWriter.luau"}},{"name":"write","desc":"Writes the given number of bits with the specified value.\\nThe value will be written from right to left in the finalised buffer.","params":[{"name":"self","desc":"A writer instance created with .new","lua_type":"WriterData"},{"name":"bits","desc":"Number of bits to write.","lua_type":"number"},{"name":"value","desc":"Value to write into the buffer.","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":64,"path":"src/BitWriter.luau"}},{"name":"moveCursor","desc":"Moves the write cursor left by the given number of bits without writing any data.\\nUseful for padding or skipping reserved sections of the buffer.","params":[{"name":"self","desc":"A writer instance created with .new","lua_type":"WriterData"},{"name":"delta","desc":"Number of bits to move the cursor by.","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":77,"path":"src/BitWriter.luau"}},{"name":"Finalize","desc":"Finalises the bit buffer and writes into the provided binary buffer.\\nExecutes all queued write and cursor move operations from right to left.","params":[{"name":"self","desc":"A writer instance created with .new","lua_type":"WriterData"}],"returns":[],"function_type":"static","source":{"line":88,"path":"src/BitWriter.luau"}}],"properties":[],"types":[],"name":"BitWriter","desc":"Internal bit buffer builder library. Writes right to left, as the bitbuffer is appended to the end of the packet.\\nA `BitWriter` accumulates a series of bit-level write and move operations, which are then packed into a binary buffer during finalisation.","source":{"line":14,"path":"src/BitWriter.luau"}}')}}]);